Nanaka sets up the EntitySystem on which the game may register EntityTypes by implementing the EntityType base class. The EntityType defines what EntityModules an Entity of that EntityType should have, and how it should be initialized. The game can then use the EntitySystem to spawn Entities of one of the defined EntitTypes either separately or directly into an EntityTree.

The EntityTree separates Entities into different "worlds" where Entities between EntityTrees do not affect each other. It does so by having separate EntityModuleManagers for each EntityTree. The EntityTree has one root Entity, and attaching an Entity to another will implicitly transfer the Entity and all of its children into the EntityTree of the new parent.

An Entity may have several representations in various subsystems, e.g. a visual representation and a physical representation, separate from each other yet sharing a common state. This is achieved through EntityModules which are attached to the Entities. An EntityModule is managed by the corresponding EntityModuleManager when the Entity is attached to an EntityTree. The EntityModuleManager may then process the EntityModules one by one (e.g. graphics) or collectively if Entities in a common EntityTree affect each other in that subsystem. (e.g. physics)
